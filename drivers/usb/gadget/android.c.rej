--- drivers/usb/gadget/android.c
+++ drivers/usb/gadget/android.c
@@ -2560,6 +2563,42 @@ struct android_usb_function projector2_function = {
 };
 
 
+static int hid_function_init(struct android_usb_function *f, struct usb_composite_dev *cdev)
+{
+	return ghid_setup(cdev->gadget, 2);
+}
+
+static void hid_function_cleanup(struct android_usb_function *f)
+{
+	ghid_cleanup();
+}
+
+static int hid_function_bind_config(struct android_usb_function *f, struct usb_configuration *c)
+{
+	int ret;
+	printk(KERN_INFO "hid keyboard\n");
+	ret = hidg_bind_config(c, &ghid_device_android_keyboard, 0);
+	if (ret) {
+		pr_info("%s: hid_function_bind_config keyboard failed: %d\n", __func__, ret);
+		return ret;
+	}
+	printk(KERN_INFO "hid mouse\n");
+	ret = hidg_bind_config(c, &ghid_device_android_mouse, 1);
+	if (ret) {
+		pr_info("%s: hid_function_bind_config mouse failed: %d\n", __func__, ret);
+		return ret;
+	}
+
+	return 0;
+}
+
+static struct android_usb_function hid_function = {
+	.name		= "hid",
+	.init		= hid_function_init,
+	.cleanup	= hid_function_cleanup,
+	.bind_config	= hid_function_bind_config,
+};
+
 static struct android_usb_function *supported_functions[] = {
 	&rndis_function,
 	&rndis_qc_function,
@@ -2595,6 +2634,7 @@ static struct android_usb_function *supported_functions[] = {
 	&qdss_function,
 	&ccid_function,
 	&uasp_function,
+	&hid_function,
 	NULL
 };
 
@@ -2904,7 +2957,6 @@ functions_store(struct device *pdev, struct device_attribute *attr,
 	char buf[256], *b;
 	int err;
 
-	
 	strlcpy(buf, buff, sizeof(buf));
 	buf[size] = 0;
 	printk(KERN_INFO "[USB]%s %s\n",__func__,buf);
